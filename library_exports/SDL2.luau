export type Event = {
    type: number,
}
export type EventType = {
    QUIT: number,
    KEYUP: number,
    KEYDOWN: number,
    DROPFILE: number,
    DROPTEXT: number,
    FINGERUP: number,
    LASTEVENT: number,
    USEREVENT: number,
    DROPBEGIN: number,
    TEXTINPUT: number,
    FIRSTEVENT: number,
    SYSWMEVENT: number,
    FINGERDOWN: number,
    MOUSEWHEEL: number,
    WINDOWEVENT: number,
    JOYBUTTONUP: number,
    MOUSEMOTION: number,
    TEXTEDITING: number,
    DISPLAYEVENT: number,
    MOUSEBUTTONUP: number,
    MOUSEBUTTONDOWN: number,
}
export type WindowFlags = {
    SHOWN: number,
    RESIZABLE: number,
    METAL: number,
    HIDDEN: number,
    OPENGL: number,
    VULKAN: number,
    FOREIGN: number,
    TOOLTIP: number,
    UTILITY: number,
    MAXIMIZED: number,
    MINIMIZED: number,
    BORDERLESS: number,
    FULLSCREEN: number,
    MENU: number,
    INPUT_FOCUS: number,
    MOUSE_FOCUS: number,
    SKIP_TASKBAR: number,
    MOUSE_CAPTURE: number,
    MOUSE_GRABBED: number,
    INPUT_GRABBED: number,
    ALLOW_HIGHDPI: number,
    ALWAYS_ON_TOP: number,
    KEYBOARD_GRABBED: number,
    FULLSCREEN_DESKTOP: number,
}
export type RendererFlags = {
    SOFTWARE: number,
    ACCELERATED: number,
    PRESENTVSYNC: number,
    TARGETTEXTURE: number,
}
export type Rect = {
    x: number,
    y: number,
    w: number,
    h: number,
}
export type SDL2 = {
    Init: () -> (),
    GetError: () -> string,
    Quit: () -> (),
    CreateWindow: (title: string, x: number, y: number, w: number, h: number, window_flags: number) -> opaque,
    DestroyWindow: (window: opaque) -> (),
    CreateRenderer: (window: opaque, index: number, renderFlags: number) -> opaque,
    DestroyRenderer: (renderer: opaque) -> (),
    RenderClear: (renderer: opaque) -> (),
    RenderPresent: (renderer: opaque) -> (),
    SetRenderDrawColor: (renderer: opaque, r: number, g: number, b: number, a: number) -> (),
    RenderDrawRect: (renderer: opaque, rect: Rect) -> (),
    RenderFillRect: (renderer: opaque, rect: Rect) -> (),
    Event: {new: () -> Event},
    Rect: {new: (x: number?, y: number?, w: number?, h: number?) -> Rect},
    EventType: EventType,
    WindowFlags: WindowFlags,
    RendererFlags: RendererFlags,
    PollEvent: (event: Event) -> boolean,
    WINDOWPOS_CENTERED: number,
    WINDOWPOS_UNDEFINED: number,
}

return cimport("halua-sdl2.dll", "sdl_library")() :: SDL2
