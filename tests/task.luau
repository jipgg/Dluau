local this_thread = coroutine.running()
print(nameof(this_thread), this_thread, coroutine.status(this_thread))
local co = coroutine.create(function(word: string)
    print(`im a coroutine {word}`)
end)
task.do_after(task.this, function()
    print("script is finished")
end)
task.spawn(function()
    task.wait_for(this_thread)
end)

local d = task.delay(5, co, "real")
task.cancel(d)
local yo = coroutine.create(function()
    while true do
        task.wait(1)
        print("yo")
    end
end)
xpcall(task.cancel, function(e)  print("fail", e) end,  yo)
task.spawn(function()
    task.wait_for(d)
    print('i waited')
end)
local s = task.spawn(function(str)
    task.do_after(task.this, function()
        print("after spawn")
    end)
    print(`status {nameof(this_thread)} = {coroutine.status(this_thread)}`)
    print(`yo {str}`)
    task.defer(function()
        print('i deferred')
    end)
end, "world")
print(`spawn {s}`)
collectgarbage('collect')
local e = task.defer(function(str)
    print(`bye bye {str}`)
end, "you")

local v = task.defer(function(str)
    task.wait(3)
    print(`bye {str}`)
end, "world")
this_thread = coroutine.running()
print(nameof(this_thread), this_thread, coroutine.status(this_thread))
print(`defer {v}`)
task.wait(6)
